#!/bin/bash

export MARKPATH=$HOME/.marks

if [ ! -d "$MARKPATH" ]; then
    mkdir -p "$MARKPATH"
fi

function _err()
{
    echo "[ERROR] $@" >&2
}

# Jump to predefined mark
function jump
{ 
    local name=$1

    if [ -z "$name" ]; then        # jump to home directory
        cd
    elif [ "$name" = "-" ]; then   # jump to last visited directory
        cd -
    elif [ -d "$name" ]; then      # jump to the directory directly
        cd "$name"
    else                           # jump to mark directory
        cd -P "$MARKPATH/$name" 2>/dev/null || \
            _err "No such mark: $name"
    fi
}

# Mark a directory
# $1: mark name, default to directory basename
function mark
{ 
    local cur="$(pwd)"
    local name="$1"

    if [ -z "$name" ]; then  # use basename as mark name
        name=$(basename "$cur")
    fi

    name=$(echo "$name" | tr A-Z a-z)
    ln -snf "$cur" "$MARKPATH/$name"
}

# Unmark a directory
# $1: mark name
function unmark
{ 
    local name="$1"

    if [ -z "$name" ]; then
        _err "Mark name must be provided"
    elif [ ! -L "$MARKPATH/$name" ]; then
        _err "Mark name doesn't exist"
    else
        unlink "$MARKPATH/$name"
    fi
}

# List the predefined marks
function marks
{
    local file

    for file in $MARKPATH/*; do
        if [ ! -L "$file" ]; then
            continue
        fi

        if [ ! -e "$file" ]; then # clean broken symbolic links
            unlink "$file"
        else
            printf "%-15s -> %s\n" "$(basename "$file")" "$(readlink "$file")"
        fi
    done
}

# Set auto bash completion for command jump or umark
function _completemarks
{
    local cword=${COMP_WORDS[COMP_CWORD]}
    local mark_list=$(marks | awk -F '->' '{print $1}' | sed 's/ *$//g')

    # Only do complete on first argument
    if [ $COMP_CWORD -eq 1 ]; then
        COMPREPLY=($(compgen -W "${mark_list[@]}" -- "$cword"))
    else
        COMPREPLY=()
    fi

    return 0
}

complete -o default -o nospace -F _completemarks jump unmark j

# Create aliases for jump
alias j=jump
